name: Multi-step multi-platform build on PR to main branch and saves the artifacts

on:
  pull_request:
    branches: ["main"]

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check-version.outputs.should-run }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetches all history for all branches and tags

      - name: Get latest release version
        id: latest-version
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Latest tag is $LATEST_TAG"
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Check version in ver.py
        id: check-version
        run: |
          CURRENT_VERSION=$(cat ver.py | grep -o "'.*'")
          echo "Current version is $CURRENT_VERSION"

          if [ "$CURRENT_VERSION" == "$LATEST_TAG" ]; then
            echo "Version $CURRENT_VERSION has not been incremented vs already released $LATEST_TAG. Build will be cancelled."
            echo "::set-output name=should-run::false"
            exit 1
          else
            echo "Current version $CURRENT_VERSION differs from latest tag $LATEST_TAG. Build will continue."
            echo "::set-output name=should-run::true"
          fi

  build:
    needs: check-version
    if: needs.check-version.outputs.should-run == 'true'

    strategy:
      matrix:
        include:
          - os: windows-latest
            build: ./build_scripts/win32_build.bat
            name: EdgeNodeLauncher-WIN32
            platformDependencies: ""

#          - os: ubuntu-24.04
#            build: |
#              chmod +x build_scripts/unix_build.sh
#              ./build_scripts/unix_build.sh
#            name: EdgeNodeLauncher-LINUX_Ubuntu-24.04
#            platformDependencies: sudo apt-get update && sudo apt install -y '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev --fix-missing
#
#          - os: ubuntu-22.04
#            build: |
#              chmod +x build_scripts/unix_build.sh
#              ./build_scripts/unix_build.sh
#            name: EdgeNodeLauncher-LINUX_Ubuntu-22.04
#            platformDependencies: sudo apt-get update && sudo apt install -y '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev --fix-missing
#
#          - os: ubuntu-20.04
#            build: |
#              chmod +x build_scripts/unix_build.sh
#              ./build_scripts/unix_build.sh
#            name: EdgeNodeLauncher-LINUX_Ubuntu-20.04
#            platformDependencies: sudo apt-get update && sudo apt-get install -y '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev --fix-missing

    name: Build installers ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions: write-all

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10.11
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.11"
      - run: ${{ matrix.platformDependencies }}
      - name: Setup env
        run: |
          pip install -r requirements.txt
          pip3 install --upgrade PyInstaller pyinstaller-hooks-contrib

      - name: Build app
        run: ${{ matrix.build }}

      - name: Save build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}-build-${{ github.event.pull_request.number }}-${{ github.sha }}
          path: dist/*

  collect-artifacts:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: EdgeNodeLauncher-WIN32-build-${{ github.event.pull_request.number }}-${{ github.sha }}
          path: ./all-builds/EdgeNodeLauncher-WIN32

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: EdgeNodeLauncher-LINUX_Ubuntu-24.04-build-${{ github.event.pull_request.number }}-${{ github.sha }}
          path: ./all-builds/EdgeNodeLauncher-LINUX_Ubuntu-24.04

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: EdgeNodeLauncher-LINUX_Ubuntu-22.04-build-${{ github.event.pull_request.number }}-${{ github.sha }}
          path: ./all-builds/EdgeNodeLauncher-LINUX_Ubuntu-22.04

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: EdgeNodeLauncher-LINUX_Ubuntu-20.04-build-${{ github.event.pull_request.number }}-${{ github.sha }}
          path: ./all-builds/EdgeNodeLauncher-LINUX_Ubuntu-20.04
