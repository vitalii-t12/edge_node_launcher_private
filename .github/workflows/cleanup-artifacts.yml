name: Cleanup Artifacts

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    name: Cleanup Old Artifacts

    steps:
      - name: Get artifact list
        id: artifact-list
        uses: actions/github-script@v6
        with:
          script: |
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });
            
            console.log(`Found ${artifacts.data.artifacts.length} artifacts`);
            
            // Keep only the 10 most recent artifacts, delete all others
            const artifactsToDelete = artifacts.data.artifacts
              .sort((a, b) => new Date(b.created_at) - new Date(a.created_at))
              .slice(10);
            
            console.log(`Will delete ${artifactsToDelete.length} artifacts`);
            
            // Set output for the next step
            core.setOutput('artifactsToDeleteJson', JSON.stringify(artifactsToDelete.map(a => ({
              id: a.id,
              name: a.name,
              created_at: a.created_at
            }))));
            
            return artifactsToDelete.length;

      - name: Delete old artifacts
        if: steps.artifact-list.outputs.artifactsToDeleteJson != '[]'
        uses: actions/github-script@v6
        env:
          ARTIFACTS_TO_DELETE: ${{ steps.artifact-list.outputs.artifactsToDeleteJson }}
        with:
          script: |
            // Get the artifacts to delete from the previous step's output
            const artifactsToDeleteJson = process.env.ARTIFACTS_TO_DELETE;
            if (!artifactsToDeleteJson || artifactsToDeleteJson === '[]') {
              console.log('No artifacts to delete');
              return;
            }
            
            const artifactsToDelete = JSON.parse(artifactsToDeleteJson);
            
            console.log('Deleting the following artifacts:');
            for (const artifact of artifactsToDelete) {
              console.log(`- ${artifact.name} (created at ${artifact.created_at})`);
              try {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id
                });
                console.log(`  Successfully deleted artifact ${artifact.id} (${artifact.name})`);
              } catch (error) {
                console.log(`  Failed to delete artifact ${artifact.id} (${artifact.name}): ${error.message}`);
              }
            }

